version: '3'
networks:
  app-tier:
    driver: bridge
services:
  openldap:
    container_name: ldap
    build: ./docker-compose-env/ldap
    networks:
      - app-tier
    ports:
      - "10636:636"
      - "10389:389"
    environment:
      - "LDAP_TLS_VERIFY_CLIENT=try"

  zookeeper:
    #image: confluentinc/cp-zookeeper
    container_name: zookeeper
    build: ./docker-compose-env/zookeeper
    networks:
      - app-tier
    env_file:
      - "./docker-compose-env/zookeeper.env"
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    build: ./docker-compose-env/kafka
    networks:
      - app-tier
    env_file:
      - "./docker-compose-env/kafka.env"
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
      - openldap

  kafkadminrest:
    image: "navikt/kafka-adminrest"
    networks:
      - app-tier
    ports:
      - "8840:8080"
    env_file:
      - "./docker-compose-env/kafka-admin-rest.env"
    command: bash apply-oneshot.sh

  schema-registry:
    image: "confluentinc/cp-schema-registry:5.0.1"
    networks:
      - app-tier
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    env_file:
      - "./docker-compose-env/schema-registry.env"

  oidc-provider-gui:
    container_name: oidc-provider-gui
    networks:
      - app-tier
    image: "docker.pkg.github.com/navikt/flex-docker-compose/flex-oidc-provider-gui:latest"
    ports:
      - "5000:5000"
    depends_on:
      - oidc-provider
    environment:
      REDIRECT_URL: "http://localhost:8080"
      AUTO_REDIRECT_TO_FRONTEND: "true"

  oidc-provider:
    container_name: oidc-provider
    networks:
      - app-tier
    image: "docker.pkg.github.com/navikt/flex-docker-compose/flex-stub-oidc-provider:latest"
    ports:
      - "9000:9000"
    environment:
      PORT: "9000"
      CALLBACK_URL: "http://localhost:5000/callback"
      ISSUER: "https://localhost:9000"

  wiremock:
    container_name: wiremock
    networks:
      - app-tier
    image: "rodolpheche/wiremock"
    volumes:
      - "./wiremock/stubs:/home/wiremock"
    ports:
      - "8000:8080"

  db:
    container_name: db
    image: 'postgres'
    networks:
      - app-tier
    restart: on-failure
    hostname: localhost
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password

  sif-innsyn-api:
    container_name: sif-innsyn-api
    image: 'sif-innsyn-api-local:latest'
    networks:
      - app-tier
    restart: on-failure
    env_file:
      - ./docker-compose-env/sif-innsyn-api.env
    ports:
      - "8080:8080"
    hostname: localhost
    depends_on:
      - db
