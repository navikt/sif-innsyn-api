no.nav:
  dittnav:
    pleiepenger-sykt-barn:
      beskjed:
        tekst: 'Vi har mottatt søknaden din om pleiepenger.'
        link: https://sif-innsyn.dev.nav.no/familie/sykdom-i-familien/soknad/innsyn/dine-pleiepenger
        dagerSynlig: 7
    omsorgspenger-midlertidig-alene:
      beskjed:
        tekst: 'Vi har mottatt omsorgspengesøknad fra deg om å bli regnet som alene om omsorgen for barn.'
        dagerSynlig: 7

  apigw:
    apikey: ${APIGW_API_KEY} # kubectl secret som miljøvariabel i pod
    sts-apikey: ${STS_APIKEY} # kubectl secret som miljøvariabel i pod

  gateways:
    k9-selvbetjening-oppslag: # Settes i nais/<cluster>.json
    sts:
      url: # Settes i nais/dev-gcp.json
      username: ${STS_USERNAME} # kubectl secret som miljøvariabel i pod
      password: ${STS_PASSWORD} # kubectl secret som miljøvariabel i pod

  security:
    cors:
      allowed-origins: # Settes i nais/<cluster>.json
    jwt:
      issuer:
        loginservice:
          cookie_name: # Settes inais/<cluster>.json

  metrics:
    interval: 60_000

topic:
  # Bryter betegner av/på funksjon for kafkalytter. True (på), False (av).
  listener:
    # topic.listener.pp-sykt-barn
    pp-sykt-barn:
      id: pp-sykt-barn-listener
      navn: privat-pleiepengesoknad-cleanup
      bryter: true
      dry-run: false

    # topic.listener.omp-midlertidig-alene
    omp-midlertidig-alene:
      id: omp-midlertidig-alene-listener
      navn: privat-omsorgspenger-midlertidig-alene-cleanup
      bryter: true
      dry-run: false

management:
  endpoints:
    web:
      exposure:
        include: health, prometheus

spring:
  application:
    name: # Settes i nais/<cluster>.json

  rest:
    retry:
      multiplier: 2
      initialDelay: 1000
      maxDelay: 4000
      maxAttempts: 3

  flyway:
    baselineOnMigrate: true
    enabled: true
    clean-on-validation-error: true
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: none
  datasource:
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: 2
      connection-timeout: 1000
    url: jdbc:postgresql://${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_HOST}:${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_PORT}/${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_DATABASE}
    username: ${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_USERNAME}
    password: ${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  kafka:
    #bootstrap-servers: # Settes i nais/<cluster>.json
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      transaction-id-prefix: ${spring.application.name}.tx.
    consumer:
      enable-auto-commit: false
      group-id: ${spring.application.name}
      auto-offset-reset: latest
      isolation-level: read_committed
      retry-interval: 60_000 # Egendefinert property
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      ssl:
        trust-store-location: file:${javax.net.ssl.trustStore}
        trust-store-password: ${javax.net.ssl.trustStorePassword}
