management:
  endpoint:
    web:
      exposure:
        include: '*'
    health:
      show-details: always

spring:
  mvc:
    log-request-details: true
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none

kafka:
  aiven:
    consumer:
      schemaRegistryUser: ${KAFKA_SCHEMA_REGISTRY_USER}
      schemaRegistryPassword: ${KAFKA_SCHEMA_REGISTRY_PASSWORD}
    properties:
      security:
        protocol: SSL
      ssl:
        trust-store-location: file:${KAFKA_TRUSTSTORE_PATH}
        trust-store-password: ${KAFKA_CREDSTORE_PASSWORD}
        trust-store-type: JKS
        key-store-location: file:${KAFKA_KEYSTORE_PATH}
        key-store-password: ${KAFKA_CREDSTORE_PASSWORD}
        key-store-type: PKCS12

no.nav.security.jwt:
  issuer:
    loginservice:
      discoveryUrl: ${LOGINSERVICE_IDPORTEN_DISCOVERY_URL} # settes av configmap: loginservice-idporten i naiserator.yml
      accepted_audience: ${LOGINSERVICE_IDPORTEN_AUDIENCE} # settes av configmap: loginservice-idporten i naiserator.yml
  client:
    registration:
      tokenx-safselvbetjening:
        token-endpoint-url: ${TOKENDINGS_BASE_URL}/token
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        authentication:
          client-auth-method: private_key_jwt
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
        token-exchange:
          audience: ${SAFSELVBETJENING_TOKEN_X_AUDIENCE}

topic:
  listener:
    # topic.listener.dok-journalfoering-v1
    dok-journalfoering-v1:
      id: dok-journalfoering-v1-listener
      navn: teamdokumenthandtering.aapen-dok-journalfoering-q1
      bryter: true
      dry-run: false
