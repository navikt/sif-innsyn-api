no.nav:
  apigw:
    apikey: ${APIGW_API_KEY}
  gateways:
    k9-selvbetjening-oppslag: ${K9_OPPSLAG_REGISTER_URL}
  security:
    jwt:
      issuer:
        selvbetjening:
           discoveryUrl: https://login.microsoftonline.com/NAVtestB2C.onmicrosoft.com/v2.0/.well-known/openid-configuration?p=B2C_1A_idporten_ver1
           cookie_name: selvbetjening-idtoken

management:
   endpoints:
      web:
         exposure:
            include: '*'
   endpoint:
      health:
         show-details: always
spring:
  rest:
    retry:
      multiplier: 2
      initialDelay: 1000
      maxDelay: 4000
      maxAttempts: 3

  application:
    name: sif-innsyn-api
  http:
    log-request-details: true
  datasource:
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: 2
    url: jdbc:postgresql://${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_HOST}:${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_PORT}/${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_DATABASE}
    username: ${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_USERNAME}
    password: ${NAIS_DATABASE_SIF_INNSYN_API_SIF_INNSYN_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  flyway:
    baselineOnMigrate: true
    enabled: true
    clean-on-validation-error: true
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create-drop
  kafka:
    properties:
      schema:
        registry:
          url:   https://kafka-schema-registry.nais.adeo.no
      security:
        protocol: #SASL_SSL
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=igroup password=itest;
    consumer:
      enable-auto-commit: false
      bootstrap-servers: #b27apvl00045.preprod.local:8443,b27apvl00046.preprod.local:8443,b27apvl00047.preprod.local:8443
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    producer:
#      bootstrap-servers: #b27apvl00045.preprod.local:8443,b27apvl00046.preprod.local:8443,b27apvl00047.preprod.local:8443
#      key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
#      transaction-id-prefix: tx.
